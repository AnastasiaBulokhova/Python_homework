## Функция *.count()*

Метод count () в Python вычисляет, сколько раз конкретное значение появляется в строке
или списке в Python. Count () принимает один аргумент: значение, которое вы хотите найти
в строке или списке. Когда count () используется со строкой, он будет искать подстроку
в строке большего размера. Затем count () вернет то количество раз, которое substring встречается
в строке.

>print(coins.count(0) if coins.count(0) < coins.count(1) else coins.count(1))

## Функция *set*

Функция set разбивает строку на символы, а из символов формирует множество. Мы видим, что символы на выходе расположились в случайном порядке и убрались дубли (буква о). Обратите внимание, что строка заключена в круглые скобки. Вспоминаем, что после функции всегда идут круглые скобки.
>d = set ('множество')
>
>print (d) {' о', 'ж', 'т', 'н', 'с', 'м', 'е', 'в'}.

## Функция map()

map() перебирает элементы итерируемого массива (или коллекции) и возвращает новый массив (или итерируемый объект), который является результатом применения функции преобразования к каждому элементу исходного итерабельного массива. Обычно используется вместо цикла for.
* подробнее тут -> https://pythonist.ru/python-map-znakomstvo/

## Функция math

Вызывает все, что связано с математическими действиями, например:

>from math import sqrt
>
>z = sqrt( (s/2)**2 - p )
>
>print( int( s/2 - z ), int( s/2 + z ) )

## Функция split()

разделяет числа, строки и тд, превращает их в список

> print(list_1.split())

## Функция append()

Добавляет значения в конец списка?, добавляет по одному элементу

> list_1.append(8)